import os
import asyncio
import subprocess
from pyrogram import Client, filters
from yt_dlp import YoutubeDL

# Th√¥ng tin bot
API_ID = id
API_HASH = "hash"
BOT_TOKEN = "token"

# Kh·ªüi t·∫°o bot
bot = Client("yt_downloader_bot", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)

# C·∫•u h√¨nh yt-dlp
ydl_opts = {
   "outtmpl": "downloads/%(title)s.%(ext)s",
   "format": "bestvideo+bestaudio/best",
}

# T·∫°o th∆∞ m·ª•c t·∫£i xu·ªëng
if not os.path.exists("downloads"):
   os.makedirs("downloads")

def get_video_info(file_path):
   try:
       cmd = ['ffprobe', '-v', 'error', '-select_streams', 'v:0',
              '-show_entries', 'stream=width,height,duration',
              '-of', 'json', file_path]
       
       result = subprocess.run(cmd, capture_output=True, text=True)
       if result.returncode == 0:
           output = eval(result.stdout)
           stream = output.get('streams', [{}])[0]
           width = int(stream.get('width', 0))
           height = int(stream.get('height', 0))
           duration = int(float(stream.get('duration', 0)))
           return duration, width, height
   except:
       pass
   return None, None, None

def create_thumbnail(video_path, thumbnail_path):
   try:
       cmd = ['ffmpeg', '-i', video_path, '-ss', '00:00:01.000', 
              '-vframes', '1', thumbnail_path, '-y']
       subprocess.run(cmd, capture_output=True)
       # Ki·ªÉm tra xem file thumbnail c√≥ t·ªìn t·∫°i kh√¥ng
       if os.path.exists(thumbnail_path):
           return True
   except:
       pass
   return False

@bot.on_message(filters.command("start"))
async def start(client, message):
   await message.reply("„Åì„Çì„Å´„Å°„ÅØÔºÅG·ª≠i link video YouTube ƒë·ªÉ m√¨nh t·∫£i v·ªÅ cho b·∫°n nh√©! üé•")

@bot.on_message(filters.text)
async def download_video(client, message):
   if message.text.startswith("/"):
       return
       
   url = message.text.strip()

   try:
       # G·ª≠i tin nh·∫Øn ƒë·∫ßu ti√™n v√† l∆∞u v√†o bi·∫øn status_msg
       status_msg = await message.reply("‚è≥ **ƒêang x·ª≠ l√Ω video...**")
       
       # C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒëang t·∫£i xu·ªëng
       await status_msg.edit("üì• **ƒêang t·∫£i xu·ªëng video...**")
       
       # T·∫£i video v·ªõi yt-dlp
       with YoutubeDL(ydl_opts) as ydl:
           info = ydl.extract_info(url, download=True)
           file_path = ydl.prepare_filename(info)
       
       # Ki·ªÉm tra xem file c√≥ t·ªìn t·∫°i kh√¥ng
       if not os.path.exists(file_path):
           raise Exception("Video kh√¥ng t·∫£i ƒë∆∞·ª£c")
           
       # C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒëang upload
       await status_msg.edit("üì§ **ƒêang t·∫£i video l√™n Telegram...**")

       # T·∫°o thumbnail trong c√πng th∆∞ m·ª•c v·ªõi video
       thumbnail_path = os.path.join(os.path.dirname(file_path), f"{os.path.basename(file_path)}_thumb.jpg")
       duration, width, height = get_video_info(file_path)
       thumbnail_created = create_thumbnail(file_path, thumbnail_path)
       
       try:
           # G·ª≠i video v·ªõi th√¥ng tin metadata
           await message.reply_video(
               video=file_path,
               duration=duration,
               width=width,
               height=height,
               thumb=thumbnail_path if thumbnail_created and os.path.exists(thumbnail_path) else None
           )
       except Exception as e:
           # N·∫øu g·ª≠i video th·∫•t b·∫°i, th·ª≠ g·ª≠i l·∫°i kh√¥ng c√≥ metadata
           await message.reply_video(video=file_path)
       
       # X√≥a c√°c file
       if thumbnail_created and os.path.exists(thumbnail_path):
           try:
               os.remove(thumbnail_path)
           except:
               pass
               
       if os.path.exists(file_path):
           try:
               os.remove(file_path)
           except:
               pass
       
       # X√≥a message tr·∫°ng th√°i
       await status_msg.delete()
       
   except Exception as e:
       # N·∫øu c√≥ status_msg (ƒë√£ t·∫°o) th√¨ m·ªõi edit
       if 'status_msg' in locals():
           await status_msg.edit(f"‚ö†Ô∏è **L·ªói:** {str(e)}")
       else:
           # N·∫øu l·ªói x·∫£y ra tr∆∞·ªõc khi t·∫°o status_msg
           await message.reply(f"‚ö†Ô∏è **L·ªói:** {str(e)}")

print("ü§ñ Bot ƒëang ch·∫°y...")
bot.run()
